name: Detect Deployment Image Change

on:
  push:
    branches:
      - main  # 監視対象ブランチ
    paths:
      - chapter_argocd/app/default/deployment.yaml  # 監視ファイル

jobs:
  detect-and-validate-change:
    runs-on: ubuntu-latest

    steps:
      # 1. ソースコードをチェックアウト
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # フルクローンで履歴を取得

      # 2. タグ変更を検出
      - name: Check Deployment Image Changes
        id: check_image_changes
        run: |
          # 差分を取得
          if git rev-parse --verify HEAD^ >/dev/null 2>&1; then
              DIFF_CMD="git diff HEAD^ HEAD -- chapter_argocd/app/default/deployment.yaml"
          else
              DIFF_CMD="git show HEAD -- chapter_argocd/app/default/deployment.yaml"
          fi
          DIFF_OUTPUT=$($DIFF_CMD || true)

          # デバッグ用に差分出力
          echo "Debug: Raw DIFF_OUTPUT:"
          echo "$DIFF_OUTPUT"

          # 抽出される差分行のチェック（フィルタあり）
          CHANGED_IMAGE=$(echo "$DIFF_OUTPUT" | grep '^+.*image:argoproj/rollouts-demo:' | sed -E 's/^.*image:argoproj\/rollouts-demo:(.*)$/\1/' | tr -d '\r')
          echo "Debug: Extracted Image Tag is '$CHANGED_IMAGE'"

          # タグが抽出できない場合
          if [ -z "$CHANGED_IMAGE" ]; then
              echo "No image tag found in the changes. Skipping workflow."
              exit 0
          fi

          # blue / green の判定
          if [ "$CHANGED_IMAGE" == "blue" ]; then
              echo "Detected a valid image tag: blue"
              echo "change_type=blue" >> $GITHUB_ENV
          elif [ "$CHANGED_IMAGE" == "green" ]; then
              echo "Detected a valid image tag: green"
              echo "change_type=green" >> $GITHUB_ENV
          else
              echo "===================================="
              echo "⚠️ WARNING: Invalid Image Tag Detected."
              echo "Unsupported Image Tag: $CHANGED_IMAGE"
              echo "File: chapter_argocd/app/default/deployment.yaml"
              echo "The detected image tag is invalid."
              echo "Please ensure the image tag is either 'blue' or 'green'."
              echo "===================================="
              echo "Detected Invalid Image Version: $CHANGED_IMAGE" | tee -a INVALID_IMAGE_ALERT.log
              echo "change_type=invalid" >> $GITHUB_ENV
              exit 1
          fi
