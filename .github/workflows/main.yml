name: Detect Deployment Image Change

on:
  push:
    branches:
      - main
    paths:
      - chapter_argocd/app/default/deployment.yaml

jobs:
  detect-and-validate-change:
    runs-on: ubuntu-latest

    steps:
      # 1. ソースコードをチェックアウト
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. 修正箇所を確認
      - name: Check for Image Changes
        id: check_image_changes
        run: |
          # Extract the changed image tags from the diff
          CHANGED_IMAGE=$(git diff HEAD^ HEAD -- chapter_argocd/app/default/deployment.yaml | grep '\- image:' | awk '{print $3}' | cut -d':' -f2 | tr -d '\r')

          echo "Detected Changed Images: $CHANGED_IMAGE"

          # Check if the tag is blue or green
          if echo "$CHANGED_IMAGE" | grep -q "blue"; then
            echo "Detected Blue tag"
            echo "change_type=blue" >> $GITHUB_ENV
          elif echo "$CHANGED_IMAGE" | grep -q "green"; then
            echo "Detected Green tag"
            echo "change_type=green" >> $GITHUB_ENV
          else
            # If the tag is neither blue nor green, print a warning
            echo "Warning: The image tag is neither blue nor green: $CHANGED_IMAGE"
            echo "Detected Invalid Image Version: $CHANGED_IMAGE" | tee -a INVALID_IMAGE_ALERT.log
            echo "change_type=invalid" >> $GITHUB_ENV
            exit 1
          fi

      # 3. アラートの種類に応じて出力
      - name: Show Alert Messages
        if: env.change_type == 'invalid'
        run: |
          echo "ALERT: Invalid image tag detected!"
          echo "Please check the 'deployment.yaml' file. Invalid tag: ${{ env.change_type }}"

      # 4. 正常変更の場合の処理を出力
      - name: Handle Valid Changes
        if: env.change_type != 'invalid'
        run: |
          echo "Valid image change detected (To: ${{ env.change_type }}). Proceeding..."
