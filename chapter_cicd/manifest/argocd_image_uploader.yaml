# argocd-image-updater.yaml / Chapter_argocdのnamespaceのモデルに合わせました。

apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-image-updater
  namespace: argo-cd
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-image-updater
  namespace: argo-cd
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
rules:
- apiGroups: [""]
  resources: ["secrets","configmaps"]
  verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-image-updater
  namespace: argo-cd
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-image-updater
subjects:
- kind: ServiceAccount
  name: argocd-image-updater
  namespace: argo-cd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-image-updater
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
- apiGroups: ["argoproj.io"]
  resources: ["applications"]
  verbs: ["get","list","watch","update","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-image-updater
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-image-updater
subjects:
- kind: ServiceAccount
  name: argocd-image-updater
  namespace: argo-cd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-image-updater-config
  namespace: argo-cd
  labels:
    app.kubernetes.io/name: argocd-image-updater-config
    app.kubernetes.io/part-of: argocd-image-updater
data:
  applications_api: kubernetes
  argocd.server_addr: argo-cd-argocd-server.argo-cd.svc:443
  argocd.insecure: "true"
  interval: "1m"
  log.level: "debug"
  kube.events: "true"
  registries.conf: |
    registries:
    - name: ghcr
      api_url: https://ghcr.io
      prefix: ghcr.io
      default: true
  git.commit-message-template: |
    chore(image-updater): {{ .AppName }} -> {{ .ImageName }}:{{ .NewTag }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-image-updater-ssh-config
  namespace: argo-cd
  labels:
    app.kubernetes.io/name: argocd-image-updater-ssh-config
    app.kubernetes.io/part-of: argocd-image-updater
data:
  ssh_config: |
    Host github.com
      StrictHostKeyChecking yes
      UserKnownHostsFile /app/config/ssh/known_hosts
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-ssh-known-hosts-cm
  namespace: argo-cd
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-image-updater-secret
  namespace: argo-cd
  labels:
    app.kubernetes.io/name: argocd-image-updater-secret
    app.kubernetes.io/part-of: argocd-image-updater
type: Opaque
stringData:
  # ARGOCD_TOKEN を使う場合のみ設定(今回は構成として省略)
  # argocd.token: "<ARGOCD_API_TOKEN>"
  # webhook.* を使う場合のみ設定
  # webhook.ghcr-secret: ""
  # webhook.docker-secret: ""
  # webhook.harbor-secret: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater
  namespace: argo-cd
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      serviceAccountName: argocd-image-updater
      containers:
      - name: argocd-image-updater
        image: quay.io/argoprojlabs/argocd-image-updater:v0.17.0
        imagePullPolicy: Always
        args: ["run"]
        env:
        - name: APPLICATIONS_API
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: applications_api
              optional: true
        - name: ARGOCD_GRPC_WEB
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: argocd.grpc_web
              optional: true
        - name: ARGOCD_SERVER
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: argocd.server_addr
              optional: true
        - name: ARGOCD_INSECURE
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: argocd.insecure
              optional: true
        - name: ARGOCD_PLAINTEXT
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: argocd.plaintext
              optional: true
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              name: argocd-image-updater-secret
              key: argocd.token
              optional: true
        - name: IMAGE_UPDATER_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: interval
              optional: true
        - name: IMAGE_UPDATER_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: log.level
              optional: true
        - name: GIT_COMMIT_USER
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: git.user
              optional: true
        - name: GIT_COMMIT_EMAIL
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: git.email
              optional: true
        - name: GIT_COMMIT_SIGNING_KEY
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: git.commit-signing-key
              optional: true
        - name: GIT_COMMIT_SIGNING_METHOD
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: git.commit-signing-method
              optional: true
        - name: GIT_COMMIT_SIGN_OFF
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: git.commit-sign-off
              optional: true
        - name: IMAGE_UPDATER_KUBE_EVENTS
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: kube.events
              optional: true
        - name: ARGOCD_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: log.level
              optional: true
        - name: ENABLE_WEBHOOK
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: webhook.enable
              optional: true
        - name: WEBHOOK_PORT
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-config
              key: webhook.port
              optional: true
        - name: QUAY_WEBHOOK_SECRET
          valueFrom:
            configMapKeyRef:
              name: argocd-image-updater-secret
              key: webhook.quay-secret
              optional: true
        - name: DOCKER_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: argocd-image-updater-secret
              key: webhook.docker-secret
              optional: true
        - name: GHCR_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: argocd-image-updater-secret
              key: webhook.ghcr-secret
              optional: true
        - name: HARBOR_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: argocd-image-updater-secret
              key: webhook.harbor-secret
              optional: true
        livenessProbe:
          httpGet: { path: /healthz, port: 8080 }
          initialDelaySeconds: 3
          periodSeconds: 30
        readinessProbe:
          httpGet: { path: /healthz, port: 8080 }
          initialDelaySeconds: 3
          periodSeconds: 30
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: { drop: ["ALL"] }
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile: { type: RuntimeDefault }
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: image-updater-conf
          mountPath: /app/config
        - name: ssh-known-hosts
          mountPath: /app/config/ssh
        - name: ssh-config
          mountPath: /app/.ssh
        - name: tmp
          mountPath: /tmp
        - name: ssh-signing-key
          mountPath: /app/ssh-keys/id_rsa
          readOnly: true
          subPath: sshPrivateKey
      volumes:
      - name: image-updater-conf
        configMap:
          name: argocd-image-updater-config
          optional: true
          items:
          - key: registries.conf
            path: registries.conf
          - key: git.commit-message-template
            path: commit.template
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
          optional: true
      - name: ssh-config
        configMap:
          name: argocd-image-updater-ssh-config
          optional: true
      - name: ssh-signing-key
        secret:
          secretName: ssh-git-creds
          optional: true
      - name: tmp
        emptyDir: {}
